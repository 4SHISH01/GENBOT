import discord
from discord.ext import commands
import json, asyncio, os, time

USERS_FILE = "data/users.json"
STOCK_FILE = "data/generated.json"
VOUCH_CHANNEL_ID = 1417034611116212305   # <== CHANGE THIS

class FreeGen(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    # -----------------------
    # Helpers
    # -----------------------
    def load_users(self):
        try:
            with open(USERS_FILE, "r") as f:
                return json.load(f)
        except:
            return {"whitelist": [], "bypass": [], "admins": [], "cooldowns": {}, "premium": []}

    def save_users(self, data):
        with open(USERS_FILE, "w") as f:
            json.dump(data, f, indent=4)

    def load_stock(self):
        if not os.path.exists(STOCK_FILE):
            return {}
        with open(STOCK_FILE, "r") as f:
            return json.load(f)

    def save_stock(self, data):
        with open(STOCK_FILE, "w") as f:
            json.dump(data, f, indent=4)

    # -----------------------
    # Core: Send Item
    # -----------------------
    async def send_item(self, interaction: discord.Interaction, category: str):
        users = self.load_users()
        cooldowns = users.get("cooldowns", {})
        now = time.time()
        uid = str(interaction.user.id)

        # Cooldown check
        if uid in cooldowns and now - cooldowns[uid] < 3600:
            remain = int(3600 - (now - cooldowns[uid]))
            return await interaction.response.send_message(
                f"⏳ You must wait **{remain//60}m {remain%60}s** before generating again.",
                ephemeral=True
            )

        # Whitelist / Bypass check
        if (
            interaction.user.id not in users.get("whitelist", [])
            and interaction.user.id not in users.get("bypass", [])
        ):
            return await interaction.response.send_message(
                "❌ You are not whitelisted to use the free generator.",
                ephemeral=True
            )

        stock = self.load_stock()
        category = category.upper()

        # Stock check
        if category not in stock or len(stock[category]) == 0:
            return await interaction.response.send_message(
                f"⚠️ No stock available for `{category}`.",
                ephemeral=True
            )

        # Pop an item
        item = stock[category].pop(0)
        self.save_stock(stock)

        # Update cooldown
        cooldowns[uid] = now
        users["cooldowns"] = cooldowns
        self.save_users(users)

        # ✅ Success Embed
        success_embed = discord.Embed(
            title="<a:GD_3ShineheartG:1420415318249046079> Account Generated Successfulyy!",
            description=f"** <a:upload:1420412079877259398> Your {category} Account has been sent in your dms! \n <a:blue_sparkle:1416726626695381042> New Account Generated By: {interaction.user} \n <a:blue_sparkle:1416726626695381042> Genrated Item: {category} \n  Please Vouch Or you'll blacklisted!**",
            color=discord.Color.green()
        )
        success_embed.set_footer(text=f"Generated by {interaction.user}")
        await interaction.response.send_message(embed=success_embed, ephemeral=False)

        # Vouch reminder
        vouch_channel = interaction.guild.get_channel(VOUCH_CHANNEL_ID)
        if vouch_channel:
            await interaction.followup.send(
                f"✅ Please vouch in {vouch_channel.mention} to keep using the generator!",
                ephemeral=False
            )

    # -----------------------
    # Panel Command
    # -----------------------
    @commands.command(name="gen")
    async def gen_command(self, ctx):
        """Send the free gen panel with buttons"""
        view = discord.ui.View(timeout=120)

        # Create button callbacks dynamically
        for cat in ["MCFA", "CRUNCHYROLL", "XBOX"]:
            async def make_callback(category):
                async def callback(interaction: discord.Interaction):
                    await self.send_item(interaction, category)
                    # Disable buttons after one use
                    for b in view.children:
                        b.disabled = True
                    await interaction.message.edit(view=view)
                return callback

            btn = discord.ui.Button(label=cat, style=discord.ButtonStyle.green)
            btn.callback = await make_callback(cat)
            view.add_item(btn)

        panel_embed = discord.Embed(
            title="🎯 Free Generator",
            description="Click a button to generate a stock item.\n**Cooldown:** 1 hour",
            color=discord.Color.green()
        )
        await ctx.send(embed=panel_embed, view=view)

# -----------------------
# Setup
# -----------------------
async def setup(bot):
    await bot.add_cog(FreeGen(bot))
