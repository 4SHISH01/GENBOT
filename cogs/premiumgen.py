import discord
from discord.ext import commands
import json, os, asyncio

from config import PREFIX, OWNER_ID

USERS_FILE = "data/users.json"
GENERATED_FILE = "data/generated.json"
COOLDOWN_TIME = 600  # 1 hour (in seconds)


class PremiumGen(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    # -----------------------
    # Helpers
    # -----------------------
    def load_users(self):
        try:
            with open(USERS_FILE, "r") as f:
                return json.load(f)
        except:
            return {"whitelist": [], "bypass": [], "admins": [], "cooldowns": {}, "premium": []}

    def save_users(self, data):
        with open(USERS_FILE, "w") as f:
            json.dump(data, f, indent=4)

    def load_generated(self):
        if not os.path.exists(GENERATED_FILE):
            return {}
        with open(GENERATED_FILE, "r") as f:
            return json.load(f)

    def save_generated(self, data):
        with open(GENERATED_FILE, "w") as f:
            json.dump(data, f, indent=4)

    def is_premium(self, user_id: int) -> bool:
        users = self.load_users()
        return user_id in users.get("premium", [])

    def check_cooldown(self, user_id: int) -> bool:
        users = self.load_users()
        cooldowns = users.get("cooldowns", {})
        last_time = cooldowns.get(str(user_id), 0)
        return (asyncio.get_event_loop().time() - last_time) < COOLDOWN_TIME

    def set_cooldown(self, user_id: int):
        users = self.load_users()
        cooldowns = users.get("cooldowns", {})
        cooldowns[str(user_id)] = asyncio.get_event_loop().time()
        users["cooldowns"] = cooldowns
        self.save_users(users)

    # -----------------------
    # Premium gen command
    # -----------------------
    @commands.command()
    async def premiumgen(self, ctx):
        """Premium generation panel"""
        user_id = ctx.author.id

        # Premium check
        if not self.is_premium(user_id):
            return await ctx.send("❌ You are not a premium user. Contact an admin to get access.")

        # Cooldown check
        if self.check_cooldown(user_id):
            return await ctx.send("⏳ You can only use this command once every hour.")

        gen_data = self.load_generated()

        # Button View
        class PremiumView(discord.ui.View):
            def __init__(self, outer: "PremiumGen"):
                super().__init__(timeout=60)
                self.outer = outer

            async def disable_all(self, interaction: discord.Interaction):
                for child in self.children:
                    child.disabled = True
                await interaction.message.edit(view=self)

            async def send_item(self, interaction: discord.Interaction, category: str):
                items = gen_data.get(category, [])
                if not items:
                    return await interaction.response.send_message(
                        f"⚠️ No stock left for `{category}`.", ephemeral=True
                    )

                # Pop and save
                item = items.pop(0)
                self.outer.save_generated(gen_data)
                self.outer.set_cooldown(interaction.user.id)

                # Success Embed
                embed = discord.Embed(
                    title="🎁 Premium Stock Generated",
                    description= f"<a:blue_sparkle:1416726626695381042> **Generated By:** {interaction.user.mention} \n"
                f"<a:blue_sparkle:1416726626695381042> **Category:** `{category}` \n"
                f"<a:upload:1420412079877259398> Account details sent to their DM. \n"
                f"<a:shine:1420411799815192659> Please vouch in the vouch channel or you may be blacklisted!",
                    color=discord.Color.gold()
                )
                embed.set_footer(text=f"Generated by {interaction.user}")
                await interaction.response.send_message(embed=embed, ephemeral=False)

                await self.disable_all(interaction)

            # Buttons
            @discord.ui.button(label="PMCFA", style=discord.ButtonStyle.green)
            async def pmcfa_btn(self, interaction: discord.Interaction, button: discord.ui.Button):
                await self.send_item(interaction, "PMCFA")

            @discord.ui.button(label="STEAM", style=discord.ButtonStyle.green)
            async def steam_btn(self, interaction: discord.Interaction, button: discord.ui.Button):
                await self.send_item(interaction, "STEAM")

            @discord.ui.button(label="ULTIMATE", style=discord.ButtonStyle.green)
            async def ultimate_btn(self, interaction: discord.Interaction, button: discord.ui.Button):
                await self.send_item(interaction, "ULTIMATE")


        # Send the panel
        panel = discord.Embed(
            title="💎 Premium Generator",
            description="Select **PMCFA** or **STEAM** below.\nCooldown: **10 min**",
            color=discord.Color.gold()
        )
        await ctx.send(embed=panel, view=PremiumView(self))


# -----------------------
# Setup
# -----------------------
async def setup(bot):
    await bot.add_cog(PremiumGen(bot))
